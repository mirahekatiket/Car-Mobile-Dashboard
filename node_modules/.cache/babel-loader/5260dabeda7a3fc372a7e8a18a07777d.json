{"ast":null,"code":"var _jsxFileName = \"/Users/nidarmayanti/Documents/cra-sass-tailwind/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport Order from './Order';\nimport Button from './components/Button';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dataList, setDataList] = useState([]);\n  const [page, setPage] = useState('');\n  const [orderStatus, setOrderStatus] = useState('');\n  useEffect(() => {\n    handleFetchList();\n  }, []);\n\n  const handleFetchList = async function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const qsParams = params ? `?${queryString.stringify(params)}` : '';\n\n    try {\n      const response = await fetch(`http://localhost:3001/orderCar/order-list${qsParams}`);\n      console.log('response: ', response);\n      const result = await response.json();\n      console.log('result: ', result); // console.log('result: ', result);\n      // const newResult = [...dataList, result.data.content];\n      // console.log('newResult: ', newResult);\n\n      if (result.data.code === 'SUCCESS') {\n        console.log('result.data.data.content: ', result.data.data.content);\n        setDataList(result.data.data.content);\n      }\n    } catch (err) {\n      console.log('err', err);\n    }\n  };\n\n  const onMoreList = () => {\n    const newPage = page + 1;\n    const payload = {\n      page: newPage,\n      size: 10,\n      orderStatus: orderStatus\n    };\n    setPage(newPage);\n    handleFetchList(payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App font-mono\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-wrapper\",\n      children: [dataList.map(item => {\n        console.log('item: ', item);\n        const {\n          orderId,\n          isSameDay,\n          customerName,\n          isWithDriver,\n          phoneNumber,\n          pickupDate,\n          orderDate\n        } = item;\n        return /*#__PURE__*/_jsxDEV(Order, {\n          orderId: orderId,\n          isSameDay: isSameDay,\n          customerName: customerName,\n          isWithDriver: isWithDriver,\n          phoneNumber: phoneNumber,\n          pickupDate: pickupDate,\n          orderDate: orderDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        label: 'Lihat Lebih Banyak',\n        secondary: true,\n        onClick: onMoreList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mhigYBFjO2+cM99OX7bvIsqWIpg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nidarmayanti/Documents/cra-sass-tailwind/src/App.js"],"names":["useState","useEffect","queryString","Order","Button","App","dataList","setDataList","page","setPage","orderStatus","setOrderStatus","handleFetchList","params","qsParams","stringify","response","fetch","console","log","result","json","data","code","content","err","onMoreList","newPage","payload","size","map","item","orderId","isSameDay","customerName","isWithDriver","phoneNumber","pickupDate","orderDate"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport queryString from 'query-string';\n\nimport Order from './Order';\nimport Button from './components/Button';\n\nimport './App.scss';\n\nfunction App() {\n  const [dataList, setDataList] = useState([]);\n  const [page, setPage] = useState('');\n  const [orderStatus, setOrderStatus] = useState('');\n\n  useEffect(() => {\n    handleFetchList();\n  }, []);\n\n  const handleFetchList = async (params={}) => {\n    const qsParams = params ? `?${queryString.stringify(params)}` : '';\n    try {\n      const response = await fetch(`http://localhost:3001/orderCar/order-list${qsParams}`);\n      console.log('response: ', response);\n      const result = await response.json();\n      console.log('result: ', result);\n      // console.log('result: ', result);\n\n      // const newResult = [...dataList, result.data.content];\n      // console.log('newResult: ', newResult);\n\n      if (result.data.code === 'SUCCESS'){\n        console.log('result.data.data.content: ', result.data.data.content);\n        setDataList(result.data.data.content);\n      }\n    } catch (err){\n      console.log('err', err);\n    }\n  }\n\n  const onMoreList = () => {\n    const newPage = page + 1;\n    const payload = { page: newPage, size: 10, orderStatus: orderStatus};\n\n    setPage(newPage);\n    handleFetchList(payload);\n  }\n  return (\n    <div className=\"App font-mono\">\n      <div className='list-wrapper'>\n        {\n          dataList.map(item => {\n            console.log('item: ', item);\n            const {orderId, isSameDay, customerName, isWithDriver, phoneNumber, pickupDate, orderDate } = item;\n            return (\n              <Order \n                orderId={orderId}\n                isSameDay={isSameDay}\n                customerName={customerName}\n                isWithDriver={isWithDriver}\n                phoneNumber={phoneNumber}\n                pickupDate={pickupDate}\n                orderDate={orderDate}\n              />\n            )\n          })\n        }\n        <Button label={'Lihat Lebih Banyak'} secondary onClick={onMoreList}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}